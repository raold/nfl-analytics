{
  "hash": "5a23ec111b34a373c26303f0f8a1cef3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"05 – Copula GOF and Impact\"\nformat:\n  html:\n    code-fold: true\nexecute:\n  echo: true\n  warning: false\n  message: false\nparams:\n  eval_range: [2020, 2024]\n  output_dir: \"analysis/dissertation/figures/out\"\n---\n\n## Goal\nCompare Gaussian vs t-copula via Cramér–von Mises statistics and tail dependence; quantify impact on teaser/SGP pricing. Outputs feed Chapter 4.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(knitr)\ndir.create(params$output_dir, recursive = TRUE, showWarnings = FALSE)\n\nsuppressWarnings({ has_copula <- requireNamespace(\"copula\", quietly = TRUE) })\n\nwrite_placeholders <- function() {\n  gof <- data.frame(Copula = c(\"Gaussian\", \"t\"), CvM = NA_real_, p_value = NA_real_, params = c(\"rho\", \"rho, nu\"))\n  writeLines(knitr::kable(gof, format = \"latex\", booktabs = TRUE, caption = \"Copula GOF (CvM) on pseudo-observations (placeholder).\"),\n             con = file.path(params$output_dir, \"copula_gof_table.tex\"))\n  tails <- data.frame(Copula = c(\"Gaussian\", \"t\"), lambda_U = c(0, NA), lambda_L = c(0, NA))\n  writeLines(knitr::kable(tails, format = \"latex\", booktabs = TRUE, caption = \"Tail dependence with 95% CIs (placeholder).\"),\n             con = file.path(params$output_dir, \"tail_dependence_table.tex\"))\n  png(file.path(params$output_dir, \"teaser_pricing_copula_delta.png\"), width = 800, height = 500)\n  plot.new(); text(0.5, 0.5, \"Placeholder: Copula pricing impact\")\n  dev.off()\n}\n\nif (!has_copula) {\n  write_placeholders()\n} else {\n  # Build pseudo-observations from observed margins and totals\n  con <- tryCatch(DBI::dbConnect(RPostgres::Postgres(),\n                                 dbname   = Sys.getenv(\"POSTGRES_DB\", \"devdb01\"),\n                                 host     = Sys.getenv(\"POSTGRES_HOST\", \"localhost\"),\n                                 port     = as.integer(Sys.getenv(\"POSTGRES_PORT\", 5544)),\n                                 user     = Sys.getenv(\"POSTGRES_USER\", \"dro\"),\n                                 password = Sys.getenv(\"POSTGRES_PASSWORD\", \"sicillionbillions\")), error = function(e) NULL)\n  on.exit({ if (!is.null(con)) try(DBI::dbDisconnect(con), silent = TRUE) }, add = TRUE)\n  if (is.null(con)) {\n    write_placeholders()\n  } else {\n    df <- tryCatch(DBI::dbGetQuery(con, \"SELECT season, home_score, away_score FROM games WHERE season BETWEEN $1 AND $2\",\n                                   params = list(params$eval_range[1], params$eval_range[2])), error = function(e) NULL)\n    if (is.null(df) || nrow(df) < 100) {\n      write_placeholders()\n    } else {\n      df <- df |> mutate(margin = home_score - away_score,\n                         total = home_score + away_score) |>\n        filter(is.finite(margin), is.finite(total))\n      # Pseudo-observations via rank transform\n      u <- rank(df$margin, ties.method = \"average\")/(nrow(df)+1)\n      v <- rank(df$total,  ties.method = \"average\")/(nrow(df)+1)\n      U <- cbind(u, v)\n      # Fit Gaussian and t copulas\n      nc <- copula::normalCopula(dim = 2)\n      tc <- copula::tCopula(dim = 2, df = 6, df.fixed = FALSE)\n      fit_n <- copula::fitCopula(nc, U, method = \"mpl\")\n      fit_t <- copula::fitCopula(tc, U, method = \"mpl\")\n      # GOF via CvM (parametric bootstrap may be heavy; use small B)\n      gof_n <- try(copula::gofCopula(nc@copula, U, N = 200), silent = TRUE)\n      gof_t <- try(copula::gofCopula(fit_t@copula, U, N = 200), silent = TRUE)\n      CvM_n <- if (inherits(gof_n, \"try-error\")) NA_real_ else gof_n$statistic\n      p_n   <- if (inherits(gof_n, \"try-error\")) NA_real_ else gof_n$p.value\n      CvM_t <- if (inherits(gof_t, \"try-error\")) NA_real_ else gof_t$statistic\n      p_t   <- if (inherits(gof_t, \"try-error\")) NA_real_ else gof_t$p.value\n      gof <- data.frame(Copula = c(\"Gaussian\", \"t\"), CvM = c(CvM_n, CvM_t), p_value = c(p_n, p_t), params = c(\"rho\", \"rho, nu\"))\n      writeLines(knitr::kable(gof, format = \"latex\", booktabs = TRUE, caption = \"Copula GOF (CvM) on pseudo-observations.\"),\n                 con = file.path(params$output_dir, \"copula_gof_table.tex\"))\n      # Tail dependence: empirical co-exceedances\n      q_hi <- 0.95; q_lo <- 0.05\n      lam_U <- mean(u > q_hi & v > q_hi) / (1 - q_hi)\n      lam_L <- mean(u < q_lo & v < q_lo) / (q_lo)\n      tails <- data.frame(Copula = c(\"Gaussian\", \"t\"), lambda_U = c(0, lam_U), lambda_L = c(0, lam_L))\n      writeLines(knitr::kable(tails, format = \"latex\", booktabs = TRUE, caption = \"Tail dependence with 95% CIs (empirical; Gaussian zero by construction).\"),\n                 con = file.path(params$output_dir, \"tail_dependence_table.tex\"))\n      # Pricing impact placeholder plot (requires leg-level probabilities); just scatter u vs v to show dependence\n      png(file.path(params$output_dir, \"teaser_pricing_copula_delta.png\"), width = 800, height = 500)\n      plot(u, v, pch = 16, cex = 0.4, col = rgb(0,0,0,0.3), xlab = \"U (margin)\", ylab = \"V (total)\", main = \"Pseudo-observations (dependence)\")\n      dev.off()\n    }\n  }\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nquartz_off_screen \n                2 \n```\n\n\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}