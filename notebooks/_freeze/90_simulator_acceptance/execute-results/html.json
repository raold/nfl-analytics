{
  "hash": "1b23675ded2ea2a767ef578b90ac4aa3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"90 â€“ Simulator Acceptance Tests: Outcomes\"\nformat:\n  html:\n    code-fold: true\nexecute:\n  echo: true\n  warning: false\n  message: false\nparams:\n  seasons: [2020, 2021, 2022, 2023, 2024]\n  output_dir: \"analysis/dissertation/figures/out\"\n---\n\n## Goal\nSummarize simulator acceptance test outcomes: pass/fail rates, typical deviations when failing, and relationship with live performance. Outputs feed Chapter 7.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(knitr)\n\n# Ensure output_dir is absolute path\noutput_dir <- params$output_dir\nif (!grepl(\"^/\", output_dir)) {\n  output_dir <- file.path(dirname(dirname(getwd())), output_dir)\n}\ndir.create(output_dir, recursive = TRUE, showWarnings = FALSE)\n\n# This notebook expects an acceptance log (per week/season/test) and live metrics per week.\n# If absent, write placeholders; otherwise compute real figures.\n\nacc_path <- \"analysis/results/sim_acceptance.csv\"\nlive_path <- \"analysis/results/live_metrics.csv\"\n\nif (file.exists(acc_path)) {\n  acc <- readr::read_csv(acc_path, show_col_types = FALSE)\n  # Expect: season, week, test, pass (0/1), deviation\n  rates <- acc |>\n    group_by(season, test) |>\n    summarise(pass_rate = mean(pass, na.rm = TRUE), n = n(), .groups = \"drop\")\n  p <- ggplot(rates, aes(x = factor(season), y = pass_rate, fill = test)) +\n    geom_col(position = position_dodge()) +\n    scale_y_continuous(labels = scales::percent) +\n    labs(x = \"Season\", y = \"Pass rate\", fill = \"Test\", title = \"Simulator acceptance pass/fail rates\") +\n    theme_minimal(base_size = 12)\n  ggsave(file.path(params$output_dir, \"sim_acceptance_rates.png\"), p, width = 9, height = 4.5, dpi = 200)\n\n  dev_tbl <- acc |>\n    filter(pass == 0) |>\n    group_by(test) |>\n    summarise(Mean_dev = mean(deviation, na.rm = TRUE),\n              CI95 = paste0(round(Mean_dev - 1.96*sd(deviation,na.rm=TRUE)/sqrt(n()), 3),\n                             \", \",\n                             round(Mean_dev + 1.96*sd(deviation,na.rm=TRUE)/sqrt(n()), 3)),\n              N_fails = n(), .groups = \"drop\")\n  writeLines(knitr::kable(dev_tbl, format = \"latex\", booktabs = TRUE,\n                          caption = \"Typical deviations when acceptance tests fail.\"),\n             con = file.path(params$output_dir, \"sim_fail_deviation_table.tex\"))\n\n  if (file.exists(live_path)) {\n    live <- readr::read_csv(live_path, show_col_types = FALSE) # Expect: season, week, clv_bps, roi\n    acc_week <- acc |>\n      group_by(season, week) |>\n      summarise(pass_all = as.integer(all(pass == 1)), .groups = \"drop\") |>\n      left_join(live, by = c(\"season\",\"week\"))\n    p2 <- ggplot(acc_week, aes(x = pass_all, y = clv_bps)) +\n      geom_boxplot() +\n      scale_x_continuous(breaks = c(0,1), labels = c(\"Fail\",\"Pass\")) +\n      labs(x = \"Acceptance outcome (all tests)\", y = \"CLV (bps)\", title = \"Acceptance vs live CLV\") +\n      theme_minimal(base_size = 12)\n    ggsave(file.path(params$output_dir, \"sim_acceptance_vs_live_perf.png\"), p2, width = 9, height = 4.5, dpi = 200)\n  } else {\n    png(file.path(params$output_dir, \"sim_acceptance_vs_live_perf.png\"), width = 900, height = 450)\n    plot.new(); text(0.5, 0.5, \"Placeholder: Acceptance vs live performance\")\n    dev.off()\n  }\n} else {\n  # Placeholder acceptance rates figure\n  png(file.path(params$output_dir, \"sim_acceptance_rates.png\"), width = 900, height = 450)\n  plot.new(); text(0.5, 0.5, \"Placeholder: Acceptance pass/fail rates by season\")\n  dev.off()\n\n  # Placeholder deviations table\n  dev_tbl <- data.frame(Test = c(\"Margin RMSE\", \"Key mass abs. error\", \"Dependence rho error\"),\n                        Mean_dev = NA_real_, CI95 = NA_character_, N_fails = NA_integer_)\n  writeLines(knitr::kable(dev_tbl, format = \"latex\", booktabs = TRUE,\n                          caption = \"Typical deviations when acceptance tests fail (placeholder).\"),\n             con = file.path(params$output_dir, \"sim_fail_deviation_table.tex\"))\n\n  # Placeholder acceptance vs live performance\n  png(file.path(params$output_dir, \"sim_acceptance_vs_live_perf.png\"), width = 900, height = 450)\n  plot.new(); text(0.5, 0.5, \"Placeholder: Acceptance vs live performance\")\n  dev.off()\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nquartz_off_screen \n                2 \n```\n\n\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}