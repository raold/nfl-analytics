name: Nightly ETL

on:
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  etl:
    runs-on: ubuntu-latest
    env:
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5544
      POSTGRES_DB: devdb01
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}

    services:
      postgres:
        image: timescale/timescaledb:latest-pg16
        ports:
          - 5544:5432
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: devdb01
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.POSTGRES_USER }} -d devdb01" --health-interval 10s --health-timeout 5s --health-retries 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/R
          key: ${{ runner.os }}-r-${{ hashFiles('renv.lock') }}

      - name: Install R dependencies
        run: Rscript -e "renv::restore()"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Wait for Postgres
        run: |
          for i in {1..20}; do
            pg_isready -h localhost -p 5544 -U $POSTGRES_USER && break
            sleep 3
          done

      - name: Apply database schema
        run: |
          psql postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5544/$POSTGRES_DB -f db/001_init.sql
          psql postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5544/$POSTGRES_DB -f db/002_timescale.sql

      - name: Run Quarto Notebooks
        run: |
          quarto render notebooks/01_ingest_schedules.qmd
          quarto render notebooks/02_pbp_features.qmd
          quarto render notebooks/03_odds_weather_join.qmd
          quarto render notebooks/04_score_validation.qmd
          quarto render notebooks/05_copula_gof.qmd
          quarto render notebooks/10_model_spread_xgb.qmd
          quarto render notebooks/11_monte_carlo_skellam.qmd
          quarto render notebooks/12_risk_sizing.qmd
          quarto render notebooks/80_rl_ablation.qmd
      
      - name: Run Python Scripts
        run: |
          python py/ingest_odds_history.py --start-date 2024-01-01 --end-date 2024-01-02
          python py/weather_meteostat.py

      - name: Run integration tests
        run: pytest tests/integration/test_ingestion.py

      - name: Generate odds coverage report
        run: Rscript --vanilla R/report_odds_coverage.R

      - name: Verify schema expectations
        run: psql postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5544/$POSTGRES_DB -f db/verify_schema.sql

      - name: Refresh analytic marts
        run: psql postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5544/$POSTGRES_DB -c "REFRESH MATERIALIZED VIEW mart.game_summary;"

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: odds-coverage
          path: data/raw/odds_coverage_by_season.csv
